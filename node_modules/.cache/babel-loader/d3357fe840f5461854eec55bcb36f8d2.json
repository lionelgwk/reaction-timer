{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString($data.title), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.start && $options.start(...args))\n  }, \"Play\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6DAEEA,oBAAkB,6BAAZC,WAAK,kBACXD,oBAAoC;IAA3BE,OAAK,yCAAEC,yCAAK;KAAE,MAAI","names":["_createElementVNode","$data","onClick","$options"],"sourceRoot":"","sources":["/Applications/MAMP/htdocs/NetNinja/reaction-timer/src/App.vue"],"sourcesContent":["<template>\n\n  <h1>{{title}}</h1>\n  <button @click=\"start\">Play</button>\n  \n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  components: { BlockOne, ResultsOne\n  },\n  data (){\n    return {\n      title: 'Ninja Reaction Timer',\n      isPlaying: false,\n      delay: null\n    }\n  },\n  methods: {\n    start() {\n      this.delay = 2000 + Math.random() * 5000\n      this.isPlaying = true;\n      console.log(this.delay);\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #444;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}