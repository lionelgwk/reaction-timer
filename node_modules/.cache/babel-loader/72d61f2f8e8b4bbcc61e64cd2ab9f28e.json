{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Ninja Reaction Timer\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BlockOne = _resolveComponent(\"BlockOne\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.start && $options.start(...args)),\n    disabled: $data.isPlaying\n  }, \"Play\", 8 /* PROPS */, _hoisted_2), $data.isPlaying ? (_openBlock(), _createBlock(_component_BlockOne, {\n    key: 0,\n    delay: $data.delay,\n    onRecord: $options.recordTime\n  }, null, 8 /* PROPS */, [\"delay\", \"onRecord\"])) : _createCommentVNode(\"v-if\", true), $data.showResults ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Reaction Time: \" + _toDisplayString($data.score) + \"ms\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEEA,oBAA6B,YAAzB,sBAAoB;;;;;;;6DAAxBC,UAA6B,EAC7BD,oBAAgE;IAAvDE,OAAK,yCAAEC,yCAAK;IAASC,QAAQ,EAAEC;KAAW,MAAI,8BACvCA,eAAS,kBAAzBC,aAAsEC;;IAApCC,KAAK,EAAEH,WAAK;IAAGI,QAAM,EAAEN;uFAChDE,iBAAW,kBAApBK,oBAAoD,iBAA9B,iBAAe,oBAAEL,WAAK,IAAE,IAAE","names":["_createElementVNode","_hoisted_1","onClick","$options","disabled","$data","_createBlock","_component_BlockOne","delay","onRecord","_createElementBlock"],"sourceRoot":"","sources":["/Applications/MAMP/htdocs/NetNinja/reaction-timer/src/App.vue"],"sourcesContent":["<template>\n\n  <h1>Ninja Reaction Timer</h1>\n  <button @click=\"start\" v-bind:disabled=\"isPlaying\">Play</button>\n  <BlockOne v-if=\"isPlaying\" v-bind:delay=\"delay\" @record=\"recordTime\"/>\n  <p v-if=\"showResults\">Reaction Time: {{score}}ms</p>\n</template>\n\n<script>\n\nimport BlockOne from './components/BlockOne.vue'\n\n\nexport default {\n  name: 'App',\n  components: {BlockOne},\n  data (){\n    return {\n      isPlaying: false,\n      delay: null,\n      score: null,\n      showResults: false\n    }\n  },\n  methods: {\n    start() {\n      this.delay = 2000 + Math.random() * 5000\n      this.isPlaying = true;\n      this.showResults = false;\n    },\n    recordTime(time){\n      this.score = time;\n      this.isPlaying = false;\n      this.showResults = true;\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #444;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}